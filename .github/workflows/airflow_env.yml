name: Deploy Airflow Project

on:
  push:
    branches:  
      - main
    paths:
      - 'dags/**'
      - 'docker-compose.yml'
      - 'Dockerfile'
      - 'requirements.txt'
      - '.env'
  workflow_dispatch:

env:
  PROJECT_DIR: /home/airflow
  PROJECT_GIT_URL: ${{ secrets.GIT_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
   
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
       
      - name: Stop existing containers and clone project
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 120s
          debug: true
          script: |
            # Stop existing containers
            if [ -d "${{ env.PROJECT_DIR }}" ]; then
              cd ${{ env.PROJECT_DIR }}
              docker-compose down || true
            fi
           
            # Clone fresh project
            cd /home
            sudo rm -rf ${{ env.PROJECT_DIR }}
            git clone ${{ env.PROJECT_GIT_URL }} ${{ env.PROJECT_DIR }}
            
            # Set proper ownership
            sudo chown -R root:root ${{ env.PROJECT_DIR }}

      - name: Create environment file
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 120s
          debug: true
          script: |
            cd ${{ env.PROJECT_DIR }}
           
            cat << EOF > .env
            AIRFLOW_UID=${{ secrets.AIRFLOW_UID }}
            AIRFLOW_FERNET_KEY=${{ secrets.AIRFLOW_FERNET_KEY }}
            AIRFLOW_SECRET_KEY=${{ secrets.AIRFLOW_SECRET_KEY }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            _AIRFLOW_WWW_USER_USERNAME=${{ secrets._AIRFLOW_WWW_USER_USERNAME }}
            _AIRFLOW_WWW_USER_PASSWORD=${{ secrets._AIRFLOW_WWW_USER_PASSWORD }}

            SUPABASE_HOST=${{ secrets.SUPABASE_HOST }}
            SUPABASE_DB=${{ secrets.SUPABASE_DB }}
            SUPABASE_USER=${{ secrets.SUPABASE_USER }}
            SUPABASE_PASSWORD=${{ secrets.SUPABASE_PASSWORD }}
            SUPABASE_PORT=${{ secrets.SUPABASE_PORT }}

            MOTHERDUCK_TOKEN=${{ secrets.MOTHERDUCK_TOKEN }}
            MOTHERDUCK_DATABASE_NAME=${{ secrets.MOTHERDUCK_DATABASE_NAME }}
            EOF
           
            chmod 600 .env

      - name: Deploy Airflow
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 120s
          debug: true
          script: |
            cd ${{ env.PROJECT_DIR }}
           
            # Create directories with proper permissions
            mkdir -p ./dags ./logs ./plugins ./config
            
            # Set proper ownership for Airflow directories
            sudo chown -R 50000:0 ./dags ./logs ./plugins ./config
            
            # Pull latest images
            docker-compose pull
            
            # Start services
            docker-compose up -d
            
            # Wait for services to be ready
            echo "Waiting for services to start..."
            sleep 30
            
            # Check if services are running
            docker-compose ps
           
            echo "Deployment complete - Airflow accessible at port 8080"
